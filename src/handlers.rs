use diesel::prelude::*;
use diesel::RunQueryDsl;

use crate::models::{NewUser, User};
use crate::schema::users; // Import `users` module generated by `table!` macro

/// Create a new user and insert it into the database
pub fn create_user(
    conn: &SqliteConnection,
    username: &str,
    password: &str,
) -> Result<usize, diesel::result::Error> {
    // In a real application, the password should be hashed before inserting
    let new_user = NewUser {
        username: username.to_string(),
        hashed_password: password.to_string(), // Use `hashed_password` field name
    };

    // Insert the new user into the `users` table
    diesel::insert_into(users::table)
        .values(&new_user)
        .execute(conn)
}
